/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
    // OpenTelemetry API and SDK dependencies
    implementation platform("io.opentelemetry:opentelemetry-bom:1.34.1")
    implementation 'io.opentelemetry:opentelemetry-api'
    implementation 'io.opentelemetry:opentelemetry-sdk'
    // implementation 'io.opentelemetry:opentelemetry-extension-auto-config'
    implementation 'io.opentelemetry:opentelemetry-exporter-logging'


    // Exporter for Jaeger (or use Zipkin if preferred)
    implementation 'io.opentelemetry:opentelemetry-exporter-jaeger'
    // OTLP gRPC Exporter
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'

    // Optional: Slf4j logging binding
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.slf4j:slf4j-simple:2.0.9'

    implementation project(':lib')
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v2.0.0/opentelemetry-javaagent.jar
jar {
    manifest {
        attributes(
            'Main-Class': 'org.example.App'  // 替换为你的主类名称
        )
    }
}

tasks.withType(JavaExec) {
    jvmArgs = [
        "-javaagent:../opentelemetry-javaagent.jar",
        "-javaagent:../lib/build/libs/lib-1.0-SNAPSHOT.jar",
        // config opentelemetry service name
        "-Dotel.service.name=my_mendix_app",
        "-Dotel.exporter=jaeger",
        "-Dotel.exporter.jaeger.endpoint=http://localhost:14268/api/traces",
        "-Dotel.traces.sampler=always_on" // 示例：确保追踪数据被采集
    ]
}